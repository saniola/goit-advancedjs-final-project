{"version":3,"file":"main-74f33049.js","sources":["../../src/js/handle-pagination-click.js","../../src/js/create-pagination.js","../../src/js/constants.js","../../src/js/fetch-quote.js","../../src/js/get-current-date.js","../../src/js/fetch-and-set-quote.js","../../src/js/category-card-markup.js","../../src/js/fetch-categories.js","../../src/js/handle-filters-click.js","../../src/js/exercise-card-markup.js","../../src/js/fetch-exercises.js","../../src/js/main.js"],"sourcesContent":["export function handlePaginationClick({ params, pagination, method }) {\n  const buttons = Array.from(pagination.querySelectorAll('.button'));\n  let currentPage = 1;\n\n  buttons.forEach(button => {\n    button.addEventListener('click', e => {\nif (!button.classList.contains('active')) {\n  currentPage = button.dataset.page;\n        method({\n          ...params,\n          page: currentPage,\n        });\n        buttons.forEach(button => button.classList.remove('active'));\n        button.classList.add('active');\n      }\n    });\n  });\n}\n","import { handlePaginationClick } from './handle-pagination-click';\n\nexport function createPagination({ params, totalPages, method }) {\n  const pagination = document.querySelector('.pagination');\n  let buttons = '';\n\n  const page = parseInt(params.page);\n\n  if (totalPages <= 1) {\n    pagination.innerHTML = '';\n    return;\n  }\n\n  if (page > 3) {\n    buttons += `\n      <button class=\"button${1 == page ? ' active' : ''}\" data-page=\"${1}\">\n        ${1}\n      </button>\n    `;\n  }\n\n  if (page - 3 > 1) {\n    buttons += `\n        <button class=\"button\" data-page=\"1\" disabled>\n          ...\n        </button>\n      `;\n  }\n\n  if (page > 2) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page - 2}\">\n        ${page - 2}\n      </button>\n    `;\n  }\n\n  if (page > 1) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page - 1}\">\n        ${page - 1}\n      </button>\n    `;\n  }\n\n  buttons += `\n      <button class=\"button active\" data-page=\"${page}\">\n        ${page}\n      </button>\n    `;\n\n  if (page + 1 <= totalPages) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page + 1}\">\n        ${page + 1}\n      </button>\n    `;\n  }\n\n  if (page + 2 <= totalPages) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page + 2}\">\n        ${page + 2}\n      </button>\n    `;\n  }\n\n  if (page + 3 <= totalPages) {\n    buttons += `\n        <button class=\"button\" data-page=\"1\" disabled>\n          ...\n        </button>\n      `;\n\n    buttons += `\n      <button class=\"button${\n        totalPages == page ? ' active' : ''\n      }\" data-page=\"${totalPages}\">\n        ${totalPages}\n      </button>\n    `;\n  }\n\n  //right arrow\n  /* buttons += `\n      <button class=\"button\" data-page=\"${page + 1}\" ${\n    page + 1 > totalPages && 'disabled'\n  }>\n        >\n      </button>\n    `; */\n\n  pagination.innerHTML = buttons;\n  handlePaginationClick({ params, pagination, method });\n}\n","export const constants = {\n  domen: 'https://your-energy.b.goit.study/api',\n}\n","import axios from 'axios';\nimport { constants } from './constants';\n\nexport async function fetchQuote() {\n  const { data } = await axios({\n    method: 'get',\n    url: `${constants.domen}/quote`,\n    responseType: 'json',\n  });\n\n  return data;\n}\n","export function getCurrentDate() {\n  const today = new Date();\n  const day = String(today.getDate()).padStart(2, '0');\n  const month = String(today.getMonth() + 1).padStart(2, '0');\n  const year = today.getFullYear();\n\n  return `${day}/${month}/${year}`;\n}\n","import { fetchQuote } from './fetch-quote';\nimport { getCurrentDate } from './get-current-date';\n\nfunction setQuote(author, quote) {\n  const quoteText = document.querySelector('.quote .text');\n  const quoteAuthor = document.querySelector('.quote .author');\n\n  if (quoteText && quoteAuthor) {\n    quoteAuthor.innerHTML = author;\n    quoteText.innerHTML = quote;\n  }\n}\n\nexport async function fetchAndSetQuote() {\n  const savedQuote = localStorage.getItem('quote');\n  const currentDate = getCurrentDate();\n\n  if(!savedQuote || JSON.parse(savedQuote).currentDate !== currentDate) {\n    const { author, quote } = await fetchQuote();\n    setQuote(author, quote);\n    localStorage.setItem('quote', JSON.stringify({\n      currentDate,\n      author,\n      quote,\n    }));\n    return;\n  }\n\n  const { author, quote } = JSON.parse(savedQuote);\n  setQuote(author, quote);\n}\n","/**create markup for category card\n * \n * @param {object} data \n * @returns {string}\n */\nexport const createCategoryMarkup = data =>\n  data.map(({ filter = 'Not found', name = 'Not found', imgURL }) =>\n      `<div class=\"category-wrap\" name=\"${name}\">\n      <img class=\"category-img\" src=\"${imgURL}\" alt=\"${name}\">\n      <div class=\"category-text-wrap\">\n          <p class=\"category-title\">${name}</p>\n          <p class=\"category-subtitle\">${filter}</p>\n      </div>\n  </div>`).join('');","import axios from 'axios';\nimport { constants } from './constants';\nimport { createCategoryMarkup } from './category-card-markup';\n\nexport async function fetchCategories(params) {\n  let filterParams = '?';\n  const content = document.querySelector('.content');\n\n  for (const [key, value] of Object.entries(params)) {\n    filterParams += `${key}=${value}&`;\n  }\n\n  const { data } = await axios({\n    method: 'get',\n    url: `${constants.domen}/filters${filterParams}limit=12`,\n    responseType: 'json',\n  });\n\n  content.innerHTML = createCategoryMarkup(data.results);\n\n  return data.totalPages;\n}\n","import axios from 'axios';\nimport { constants } from './constants';\nimport { createPagination } from './create-pagination';\n\nexport async function handleFiltersClick(method) {\n  const filterButtons = Array.from(document.querySelectorAll('.btn-filter'));\n\n  filterButtons.forEach(button => {\n    button.addEventListener('click', async() => {\n      if (!button.classList.contains('active')) {\n        filterButtons.forEach(button => button.classList.remove('active'));\n        button.classList.add('active');\n\n        const totalPages = await method({\n          filter: button.dataset.category.replace(' ', '+'),\n          page: 1,\n        });\n\n        createPagination({\n          params:{filter: button.dataset.category.replace(' ', '+'),\n          page: 1},\n          totalPages,\n          method: method,\n        });\n      }\n    });\n  });\n}\n","/**create markup for exercises cards\n * if isFavorite is true - will be create card in Favorite page\n * if isFavorite is false - will be create card in the Home page\n *\n * @param {object} data\n * @param {boolean} isFavorite\n * @returns {string}\n */\nexport const createExerciseMarkup = (data, isFavorite = false) => {\n    if (data.length === 0) {\n        return `<p class=\"not-found-message\">No results found.</p>`;\n      } else {\n        return data.map(({ _id, name, burnedCalories, rating, target, time, bodyPart\n        }) => `<div class=\"exercises-container\">\n                <div class=\"exercises-header\">\n                    <div class=\"exercises-workout-ratio\">\n                        <div class=\"exercises-workout\">WORKOUT</div>\n                        ${isFavorite ? toggleExercisesCard() : toggleExercisesCard(rating)}\n                    </div>\n                    <button class=\"modal-exercise-info\" type=\"button\" id=\"${_id}\">\n                        <span>Start</span>\n                        <svg class=\"icon-arrow\" width=\"16\" height=\"16\">\n                            <use href=\"./images/icons.svg#icon-arrow\"></use>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"exercises-title\">\n                    <svg class=\"run-icon\" width=\"24\" height=\"24\">\n                        <use href=\"./images/icons.svg#icon-run\"></use>\n                    </svg>\n                    <p class=\"exercises-name\">${name}</p>\n                </div>\n                <div class=\"exercises-info\">\n                    <div class=\"exercises-info-item\">\n                        <p class=\"exercises-info-title\">Burned calories:</p>\n                        <p class=\"exercises-info-value burned-calories\">${burnedCalories} / ${time} min</p>\n                    </div>\n                    <div class=\"exercises-info-item\">\n                        <p class=\"exercises-info-title\">Body part:</p>\n                        <p class=\"exercises-info-value body-part\">${bodyPart}</p>\n                    </div>\n                    <div class=\"exercises-info-item\">\n                        <p class=\"exercises-info-title\">Target:</p>\n                        <p class=\"exercises-info-value target\">${target}</p>\n                    </div>\n                </div>\n            </div>\n        </div>`).join('');\n      }\n}\n\n\n\n\n/**choose markup for exercise's card depend on:\n *  if it's the Favorite page or Home\n *  and\n * -if rating is null - will be create trash button\n * -if rating is not null - will be create ratio\n *\n * @param {number} rating\n * @returns {string}\n */\nfunction toggleExercisesCard(rating = null) {\n  if (rating || rating === 0) {\n    return `<div class=\"exercises-ratio\">\n      <p class=\"ratio-value\">${convertRating(rating)}</p>\n      <svg class=\"ratio-star\" width=\"18\" height=\"18\">\n          <use href=\"./images/icons.svg#icon-star\"></use>\n      </svg>\n      </div>`;\n  }\n  return `<button class=\"trash-btn js-delete-favorite\" type=\"button\">\n    <svg class=\"trash-icon\" width=\"16\" height=\"16\">\n        <use href=\"./images/icons.svg#icon-trash\"></use>\n    </svg>\n    </button>`;\n}\n\n/**convert rating to 0.0 template\n *\n * @param {number} rating\n * @returns {string}\n */\nfunction convertRating(rating) {\n    return rating % 1 ? `${Math.round(rating * 10) / 10}` : `${rating}.0`;\n}\n","import axios from 'axios';\nimport { constants } from './constants';\n\nimport { createExerciseMarkup } from './exercise-card-markup';\nimport { createPagination } from './create-pagination';\n\nexport async function fetchExercises(params) {\n\n  const { category, ...searchparams } = params;\n  \n\n  const { keyword, page } = params;\n  let filterParams = '?';\n  const content = document.querySelector('.content');\n\n  for (const [key, value] of Object.entries(params)) {\n    filterParams += `${key}=${value}&`;\n  }\n\n  const { data } = await axios({\n    method: 'get',\n    url: `${constants.domen}/exercises${filterParams}limit=10`,\n    responseType: 'json',\n  });\n\n  content.innerHTML = createExerciseMarkup(data.results);\n\n  const titleExercise = document.querySelector('.js-title');\n  const titleExerciseSlash = document.querySelector('.js-title-slash');\n\n  titleExercise.textContent = category;\n  titleExercise.classList.remove('is-hide');\n  titleExerciseSlash.classList.remove('is-hide');\n\n  \n\n  const pagination = document.querySelector('.pagination');\n  pagination.innerHTML = '';\n\n  if (data.totalPages > 1) {\n    createPagination({\n      params: searchparams,\n      totalPages: data?.totalPages,\n      method: fetchExercises,\n    });\n  }\n}\n","import { createPagination } from './create-pagination';\nimport { fetchAndSetQuote } from './fetch-and-set-quote';\nimport { fetchCategories } from './fetch-categories';\nimport { handleFiltersClick } from './handle-filters-click';\nimport { fetchExercises } from './fetch-exercises';\n\nconst searchForm = document.querySelector('.form-search-exersises');\nconst content = document.querySelector('.content');\nconst filterTabs = document.querySelector('.list-filter-exersises');\n\nconst filter = 'Muscles';\nlet page = 1;\nlet catValue = '';\nlet keyword = '';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n\n  const method = fetchCategories;\n  fetchAndSetQuote();\n  // if (isExcercisesPage) {\n  //   method = fetchExcercises;\n  // }\n  handleFiltersClick(method);\n\n  const totalPages = await method({\n    filter,\n    page,\n  });\n\n\n  if (totalPages > 1) {\n    createPagination({\n      params: { filter, page },\n      totalPages,\n      method: fetchCategories,\n    });\n  }\n});\n\nsearchForm.addEventListener('submit', async e => {\n  e.preventDefault();\n  const input = e.target.querySelector('.input-search-exersises');\n  keyword = input.value;\n\n  const category = document.querySelector('.btn-filter.active').dataset.exercise\n\n  const totalPages = await fetchExercises({\n    [category]: catValue,\n    category,\n    keyword,\n    page,\n  });\n});\n\ncontent.addEventListener('click', async e => {\n  const item = e.target.closest('.category-wrap');\n  if (!item) return;\n  searchForm.classList.remove('is-hide');\n  catValue = item.getAttribute('name');\n  const category = document.querySelector('.btn-filter.active').dataset.exercise;\n  \n  const totalPages = await fetchExercises({\n    [category]: catValue,\n    category,\n    keyword,\n    page,\n  });\n});\n"],"names":["handlePaginationClick","params","pagination","method","buttons","currentPage","button","e","createPagination","totalPages","page","constants","fetchQuote","data","axios","getCurrentDate","today","day","month","year","setQuote","author","quote","quoteText","quoteAuthor","fetchAndSetQuote","savedQuote","currentDate","createCategoryMarkup","filter","name","imgURL","fetchCategories","filterParams","content","key","value","handleFiltersClick","filterButtons","createExerciseMarkup","isFavorite","_id","burnedCalories","rating","target","time","bodyPart","toggleExercisesCard","convertRating","fetchExercises","category","searchparams","titleExercise","titleExerciseSlash","searchForm","catValue","keyword","item"],"mappings":"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"}