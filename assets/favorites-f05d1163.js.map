{"version":3,"file":"favorites-f05d1163.js","sources":["../../src/js/constants.js","../../src/js/exercise-card-markup.js","../../src/js/handle-pagination-click.js","../../src/js/create-pagination.js","../../src/js/fetch-favorites.js","../../src/js/toast.js","../../src/js/fetch-exercise.js","../../src/js/exercise-modal.js","../../src/js/favorites.js"],"sourcesContent":["export const constants = {\n  domen: 'https://your-energy.b.goit.study/api',\n  FAV_KEY: 'favorites'\n}\n","/**create markup for exercises cards\n * if isFavorite is true - will be create card in Favorite page\n * if isFavorite is false - will be create card in the Home page\n *\n * @param {object} data\n * @param {boolean} isFavorite\n * @returns {string}\n */\nexport const createExerciseMarkup = (data, isFavorite = false) => {\n  if (data.length === 0) {\n    return `<p class=\"not-found-message\">No results found.</p>`;\n  } else {\n    return data\n      .map(\n        ({\n          _id,\n          name,\n          burnedCalories,\n          rating,\n          target,\n          time,\n          bodyPart,\n        }) => `<div class=\"exercises-container\">\n                <div class=\"exercises-header\">\n                    <div class=\"exercises-workout-ratio\">\n                        <div class=\"exercises-workout\">WORKOUT</div>\n                        ${\n                          isFavorite\n                            ? toggleExercisesCard()\n                            : toggleExercisesCard(rating)\n                        }\n                    </div>\n                    <button class=\"modal-exercise-info\" type=\"button\" id=\"${_id}\">\n                        <span>Start</span>\n                        <svg class=\"icon-arrow\" width=\"16\" height=\"16\">\n                            <use href=\"./images/icons.svg#icon-arrow\"></use>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"exercises-title\">\n                    <svg class=\"run-icon\" width=\"24\" height=\"24\">\n                        <use href=\"./images/icons.svg#icon-run\"></use>\n                    </svg>\n                    <p class=\"exercises-name\">${name}</p>\n                </div>\n                <div class=\"exercises-info\">\n                    <div class=\"exercises-info-item\">\n                        <p class=\"exercises-info-title\">Burned calories:</p>\n                        <p class=\"exercises-info-value burned-calories\">${burnedCalories} / ${time} min</p>\n                    </div>\n                    <div class=\"exercises-info-item\">\n                        <p class=\"exercises-info-title\">Body part:</p>\n                        <p class=\"exercises-info-value body-part\">${bodyPart}</p>\n                    </div>\n                    <div class=\"exercises-info-item\">\n                        <p class=\"exercises-info-title\">Target:</p>\n                        <p class=\"exercises-info-value target\">${target}</p>\n                    </div>\n                </div>\n            </div>\n        </div>`\n      )\n      .join('');\n  }\n};\n\n/**choose markup for exercise's card depend on:\n *  if it's the Favorite page or Home\n *  and\n * -if rating is null - will be create trash button\n * -if rating is not null - will be create ratio\n *\n * @param {number} rating\n * @returns {string}\n */\nfunction toggleExercisesCard(rating = null) {\n  if (rating || rating === 0) {\n    return `<div class=\"exercises-ratio\">\n      <p class=\"ratio-value\">${convertRating(rating)}</p>\n      <svg class=\"ratio-star\" width=\"18\" height=\"18\">\n          <use href=\"./images/icons.svg#icon-star\"></use>\n      </svg>\n      </div>`;\n  }\n  return `<button class=\"trash-btn js-delete-favorite\" type=\"button\">\n    <svg class=\"trash-icon\" width=\"16\" height=\"16\">\n        <use href=\"./images/icons.svg#icon-trash\"></use>\n    </svg>\n    </button>`;\n}\n\n/**convert rating to 0.0 template\n *\n * @param {number} rating\n * @returns {string}\n */\nfunction convertRating(rating) {\n  return rating % 1 ? `${Math.round(rating * 10) / 10}` : `${rating}.0`;\n}\n","export function handlePaginationClick({ params, pagination, method }) {\n  const buttons = Array.from(pagination.querySelectorAll('.button'));\n  let currentPage = 1;\n\n  buttons.forEach(button => {\n    button.addEventListener('click', e => {\n      if (!button.classList.contains('active')) {\n        currentPage = button.dataset.page;\n        method({\n          ...params,\n          page: currentPage,\n        });\n        buttons.forEach(button => button.classList.remove('active'));\n        button.classList.add('active');\n      }\n    });\n  });\n}\n","import { handlePaginationClick } from './handle-pagination-click';\n\nexport function createPagination({ params, totalPages, method }) {\n  const pagination = document.querySelector('.pagination');\n  let buttons = '';\n\n  const page = parseInt(params.page);\n\n  if (totalPages <= 1) {\n    pagination.innerHTML = '';\n    return;\n  }\n\n  if (page > 3) {\n    buttons += `\n      <button class=\"button${1 == page ? ' active' : ''}\" data-page=\"${1}\">\n        ${1}\n      </button>\n    `;\n  }\n\n  if (page - 3 > 1) {\n    buttons += `\n        <button class=\"button\" data-page=\"1\" disabled>\n          ...\n        </button>\n      `;\n  }\n\n  if (page > 2) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page - 2}\">\n        ${page - 2}\n      </button>\n    `;\n  }\n\n  if (page > 1) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page - 1}\">\n        ${page - 1}\n      </button>\n    `;\n  }\n\n  buttons += `\n      <button class=\"button active\" data-page=\"${page}\">\n        ${page}\n      </button>\n    `;\n\n  if (page + 1 <= totalPages) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page + 1}\">\n        ${page + 1}\n      </button>\n    `;\n  }\n\n  if (page + 2 <= totalPages) {\n    buttons += `\n      <button class=\"button\" data-page=\"${page + 2}\">\n        ${page + 2}\n      </button>\n    `;\n  }\n\n  if (page + 3 == totalPages) {\n    \n\n    buttons += `\n      <button class=\"button${\n        totalPages == page ? ' active' : ''\n      }\" data-page=\"${totalPages}\">\n        ${totalPages}\n      </button>\n    `;\n  }\n  else if (page + 3 < totalPages) {\n    buttons += `\n        <button class=\"button\" data-page=\"1\" disabled>\n          ...\n        </button>\n      `;\n\n    buttons += `\n      <button class=\"button${\n        totalPages == page ? ' active' : ''\n      }\" data-page=\"${totalPages}\">\n        ${totalPages}\n      </button>\n    `;\n  }\n\n  pagination.innerHTML = buttons;\n  handlePaginationClick({ params, pagination, method });\n}\n","import axios from 'axios';\nimport { constants } from './constants';\nimport { createExerciseMarkup } from './exercise-card-markup';\nimport { createPagination } from './create-pagination';\n\nexport async function fetchFavorites(params) {\n  const { data } = await axios({\n    method: 'get',\n    url: `${constants.domen}/exercises?page=1&limit=10000`,\n    responseType: 'json',\n  });\n  const perPage = 4;\n  const exersises = data.results;\n  const favorites = JSON.parse(localStorage.getItem(constants.FAV_KEY)) ?? [];\n  if (exersises && favorites && favorites.length) {\n    const filteredExersises = exersises.filter(item => favorites.includes(item._id));\n    const start = params && params.page ? (parseInt(params.page) - 1) * perPage : 0;\n    const slicedExercises = filteredExersises.slice(start, start + perPage);\n    document.querySelector('.content').innerHTML = createExerciseMarkup(slicedExercises, true);\n    document.querySelector('.pagination').innerHTML = '';\n    const totalPages = filteredExersises.length > perPage ? Math.ceil(filteredExersises.length / perPage) : 1;\n    if (totalPages > 1) {\n      createPagination({\n        params: params,\n        totalPages: totalPages,\n        method: fetchFavorites,\n      });\n    }\n  } else {\n    document.querySelector('.content').innerHTML = '';\n    document.querySelector('.pagination').innerHTML = '';\n  }\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport function showToast({ type, title, message, position = 'topRight' }) {\n  switch (type) {\n    case 'error':\n      iziToast.error({\n        title,\n        message,\n        position\n      });\n      break;\n    case 'success':\n      iziToast.success({\n        title,\n        message,\n        position,\n      });\n      break;\n    case 'info':\n      iziToast.warning({\n        title,\n        message,\n        position\n      });\n      break;\n  }\n}\n","import axios from 'axios';\nimport { constants } from './constants';\nimport { showToast } from './toast';\n\nexport async function fetchExercise(id) {\n  const loader = document.querySelector('.loader-text');\n  loader.style.display = 'block';\n  try {\n    const { data } = await axios({\n      method: 'get',\n      url: `${constants.domen}/exercises/${id}`,\n      responseType: 'json',\n    });\n    return data;\n  } catch (error) {\n    showToast({\n      type: 'error',\n      title: 'Server error',\n      message: 'Sorry, the exercise information was not retrieved from the server. Please refresh the page'\n  });\n  } finally {\n    loader.style.display = 'none';\n  }\n}\n","import { fetchExercise } from './fetch-exercise';\nimport { initFavoritesButtons } from './favorites';\n\nconst modal = document.getElementById('exerciseModal');\nconst closeButton = document.getElementById('closeButton');\n\nexport async function openModal(exerciseId) {\n  let exerciseData;\n  try {\n    exerciseData = await fetchExercise(exerciseId);\n    renderModal(exerciseData);\n    addCloseButtonListener();\n    initFavoritesButtons();\n  } catch (error) {\n    showToast('error', 'Server error', 'Error fetching exercise data');\n  }\n}\n\nfunction renderModal(exerciseData) {\n  document.querySelector('.exercise-header h2').textContent = exerciseData.name;\n  document.querySelector('.rating-value').textContent = exerciseData.rating.toFixed(1);\n  document.querySelector('.exercise-image').src = exerciseData.gifUrl;\n  document.querySelector('.exercise-image').alt = exerciseData.name;\n  document.querySelector('.target-value-js').innerHTML = exerciseData.target;\n  document.querySelector('.body-part-value-js').innerHTML = exerciseData.bodyPart;\n  document.querySelector('.equipment-value-js').innerHTML = exerciseData.equipment;\n  document.querySelector('.popularity-value-js').innerHTML = exerciseData.popularity;\n  document.querySelector('.calories-value-js').innerHTML = `${exerciseData.burnedCalories}/${exerciseData.time} min`;\n  document.querySelector('.exercise-description').textContent = exerciseData.description;\n  document.querySelector('#addFavoritesButton').dataset.id = exerciseData._id;\n  document.querySelector('#removeFavoritesButton').dataset.id = exerciseData._id;\n  renderStars(exerciseData.rating);\n  showModal();\n}\n\nfunction renderStars(rating) {\n  document.querySelectorAll('.icon-star').forEach((star, index) => {\n    star.classList.toggle('empty', index >= Math.round(rating));\n  });\n}\n\nfunction showModal() {\n  modal.classList.remove('hidden');\n}\n\nfunction hideModal() {\n  modal.classList.add('hidden');\n}\n\nfunction addCloseButtonListener() {\n  closeButton.addEventListener('click', hideModal);\n}\n","import { fetchFavorites } from './fetch-favorites';\nimport { constants } from './constants';\nimport { openModal } from './exercise-modal';\n\nconst addFavoritesButton = document.getElementById('addFavoritesButton');\nconst removeFavoritesButton = document.getElementById('removeFavoritesButton');\n\nexport function initFavoritesButtons() {\n  addFavoritesButton.addEventListener('click', addToFavorites);\n  removeFavoritesButton.addEventListener('click', removeFromFavorites);\n  let favorites = JSON.parse(localStorage.getItem(constants.FAV_KEY)) ?? [];\n  const exerciseId = addFavoritesButton.dataset.id;\n  if (exerciseId && favorites.includes(exerciseId)) {\n    showRemoveFavoritesButton();\n  } else {\n    showAddFavoritesButton();\n  }\n}\n\nfunction addToFavorites() {\n  let favorites = JSON.parse(localStorage.getItem(constants.FAV_KEY)) ?? [];\n  const exerciseId = addFavoritesButton.dataset.id;\n  if (exerciseId && !favorites.includes(exerciseId)) {\n    favorites.push(addFavoritesButton.dataset.id);\n    localStorage.setItem(constants.FAV_KEY, JSON.stringify(favorites));\n    showRemoveFavoritesButton();\n  }\n}\n\nfunction removeFromFavorites() {\n  let favorites = JSON.parse(localStorage.getItem(constants.FAV_KEY)) ?? [];\n  const exerciseId = removeFavoritesButton.dataset.id;\n  if (exerciseId && favorites.includes(exerciseId)) {\n    const filteredFavorites = favorites.filter(item => item !== exerciseId);\n    localStorage.setItem(constants.FAV_KEY, JSON.stringify(filteredFavorites));\n    showAddFavoritesButton();\n  }\n}\n\nfunction showAddFavoritesButton() {\n  addFavoritesButton.classList.remove('hidden');\n  removeFavoritesButton.classList.add('hidden');\n}\n\nfunction showRemoveFavoritesButton() {\n  addFavoritesButton.classList.add('hidden');\n  removeFavoritesButton.classList.remove('hidden');\n}\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  fetchFavorites({ page: 1 });\n});\n\ndocument.querySelector('.toggle-btn-home').classList.remove('active');\ndocument.querySelector('.toggle-btn-favorites').classList.add('active');\n"],"names":["constants","createExerciseMarkup","data","isFavorite","_id","name","burnedCalories","rating","target","time","bodyPart","toggleExercisesCard","convertRating","handlePaginationClick","params","pagination","method","buttons","currentPage","button","e","createPagination","totalPages","page","fetchFavorites","axios","perPage","exersises","favorites","filteredExersises","item","start","slicedExercises","showToast","type","title","message","position","iziToast","fetchExercise","id","loader","modal","closeButton","openModal","exerciseId","exerciseData","renderModal","addCloseButtonListener","initFavoritesButtons","renderStars","showModal","star","index","hideModal","addFavoritesButton","removeFavoritesButton","addToFavorites","removeFromFavorites","showRemoveFavoritesButton","showAddFavoritesButton","filteredFavorites"],"mappings":"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"}