{"version":3,"file":"commonHelpers.js","sources":["../src/js/handle-pagination-click.js","../src/js/create-pagination.js","../src/js/constants.js","../src/js/fetch-quote.js","../src/js/get-current-date.js","../src/js/fetch-and-set-quote.js","../src/js/category-card-markup.js","../src/js/fetch-categories.js","../src/js/handle-filters-click.js","../src/js/main.js"],"sourcesContent":["export function handlePaginationClick({ filter, page, pagination, method }) {\n  const buttons = Array.from(pagination.querySelectorAll('.button'));\n  let curentPage = page;\n\n  buttons.forEach(button => {\n    button.addEventListener('click', e => {\n      if (!button.classList.contains('active')) {\n        curentPage = button.dataset.page;\n        method({\n          filter,\n          page: curentPage,\n        });\n        buttons.forEach(button => button.classList.remove('active'));\n        button.classList.add('active');\n      }\n    });\n  });\n}\n","import { handlePaginationClick } from './handle-pagination-click';\n\nexport function createPagination({ filter, page, totalPages, method }) {\n  const pagination = document.querySelector('.pagination');\n  let buttons = '';\n\n  if (totalPages <= 1) {\n    pagination.innerHTML = '';\n    return;\n  }\n\n  for (let i = 1; i <= totalPages; i++) {\n    buttons += `\n      <button class=\"button${i === 1 ? ' active' : ''}\" data-page=\"${i}\">\n        ${i}\n      </button>\n    `;\n  }\n\n  pagination.innerHTML = buttons;\n  handlePaginationClick({ filter, page, pagination, method });\n}\n","export const constants = {\n  domen: 'https://your-energy.b.goit.study/api',\n}\n","import axios from 'axios';\nimport { constants } from './constants';\n\nexport async function fetchQuote() {\n  const { data } = await axios({\n    method: 'get',\n    url: `${constants.domen}/quote`,\n    responseType: 'json',\n  });\n\n  return data;\n}\n","export function getCurrentDate() {\n  const today = new Date();\n  const day = String(today.getDate()).padStart(2, '0');\n  const month = String(today.getMonth() + 1).padStart(2, '0');\n  const year = today.getFullYear();\n\n  return `${day}/${month}/${year}`;\n}\n","import { fetchQuote } from './fetch-quote';\nimport { getCurrentDate } from './get-current-date';\n\nfunction setQuote(author, quote) {\n  const quoteText = document.querySelector('.quote .text');\n  const quoteAuthor = document.querySelector('.quote .author');\n\n  if (quoteText && quoteAuthor) {\n    quoteAuthor.innerHTML = author;\n    quoteText.innerHTML = quote;\n  }\n}\n\nexport async function fetchAndSetQuote() {\n  const savedQuote = localStorage.getItem('quote');\n  const currentDate = getCurrentDate();\n\n  if(!savedQuote || JSON.parse(savedQuote).currentDate !== currentDate) {\n    const { author, quote } = await fetchQuote();\n    setQuote(author, quote);\n    localStorage.setItem('quote', JSON.stringify({\n      currentDate,\n      author,\n      quote,\n    }));\n    return;\n  }\n\n  const { author, quote } = JSON.parse(savedQuote);\n  setQuote(author, quote);\n}\n","/**create markup for category card\n * \n * @param {object} data \n * @returns {string}\n */\nexport const createCategoryMarkup = data =>\n  data.map(({ filter = 'Not found', name = 'Not found', imgURL }) =>\n      `<div class=\"category-wrap\" name=\"${name}\">\n      <img class=\"category-img\" src=\"${imgURL}\" alt=\"${name}\">\n      <div class=\"category-text-wrap\">\n          <p class=\"category-title\">${name}</p>\n          <p class=\"category-subtitle\">${filter}</p>\n      </div>\n  </div>`).join('');","import axios from 'axios';\nimport { constants } from './constants';\nimport { createCategoryMarkup } from './category-card-markup';\n\nexport async function fetchCategories(params) {\n  let filterParams = '?';\n  const content = document.querySelector('.content');\n\n  for (const [key, value] of Object.entries(params)) {\n    filterParams += `${key}=${value}&`;\n  }\n\n  const { data } = await axios({\n    method: 'get',\n    url: `${constants.domen}/filters${filterParams}limit=12`,\n    responseType: 'json',\n  });\n\n  content.innerHTML = createCategoryMarkup(data.results);\n\n  return data.totalPages;\n}\n","import axios from 'axios';\nimport { constants } from './constants';\nimport { createPagination } from './create-pagination';\n\nexport async function handleFiltersClick(method) {\n  const filterButtons = Array.from(document.querySelectorAll('.btn-filter'));\n\n  filterButtons.forEach(button => {\n    button.addEventListener('click', async() => {\n      if (!button.classList.contains('active')) {\n        filterButtons.forEach(button => button.classList.remove('active'));\n        button.classList.add('active');\n\n        const totalPages = await method({\n          filter: button.dataset.category.replace(' ', '+'),\n          page: 1,\n        });\n\n        createPagination({\n          filter: button.dataset.category.replace(' ', '+'),\n          page: 1,\n          totalPages,\n          method: method,\n        });\n      }\n    });\n  });\n}\n","import { createPagination } from './create-pagination';\nimport { fetchAndSetQuote } from './fetch-and-set-quote';\nimport { fetchCategories } from './fetch-categories';\n// import { fetchExcercises } from './fetch-excercises';\nimport { handleFiltersClick } from './handle-filters-click';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const filter = 'Muscles';\n  const page = 1;\n  const method = fetchCategories;\n\n  fetchAndSetQuote();\n  // if (isExcercisesPage) {\n  //   method = fetchExcercises;\n  // }\n  handleFiltersClick(method);\n\n  const totalPages = await method({\n    filter,\n    page,\n  });\n\n  createPagination({\n    filter,\n    page,\n    totalPages,\n    method: method,\n  });\n});\n"],"names":["handlePaginationClick","filter","page","pagination","method","buttons","curentPage","button","e","createPagination","totalPages","i","constants","fetchQuote","data","axios","getCurrentDate","today","day","month","year","setQuote","author","quote","quoteText","quoteAuthor","fetchAndSetQuote","savedQuote","currentDate","createCategoryMarkup","name","imgURL","fetchCategories","params","filterParams","content","key","value","handleFiltersClick","filterButtons"],"mappings":"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"}